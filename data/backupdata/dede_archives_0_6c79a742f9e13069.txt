INSERT INTO `dede_archives` VALUES('1','1','0','1516204800','p','1','3','0','209','0','金融现货交易所画册','','','admin','未知','/uploads/allimg/180118/1-1P11Q604400-L.png','1516204800','1516263256','1','金融现货交易所画册这是很早做的一个','0','0','0','0','0','0','这是很早做的一个金融画册，做的很急感觉不太好(*_*)','','1','0','0','0');
INSERT INTO `dede_archives` VALUES('2','1','0','1516264471','p','1','3','0','202','0','纸杯设计','','','admin','未知','/uploads/allimg/180118/1-1P11Q634520-L.png','1516264471','1516264766','1','纸杯,设计,纸杯,','0','0','0','0','0','0','纸杯','','1','0','0','1');
INSERT INTO `dede_archives` VALUES('3','3','0','1519184200','','1','3','0','69','0','111111111','','','admin','未知','','1519184200','1519184205','1','111111111,11111111111111,','0','0','0','0','0','0','11111111111111','','1','0','0','2');
INSERT INTO `dede_archives` VALUES('4','2','0','1519184225','','1','3','0','78','0','111111','','','admin','未知','','1519184225','1519184229','1','111111,11111111,','0','0','0','0','0','0','11111111','','1','0','0','3');
INSERT INTO `dede_archives` VALUES('5','4','0','1519184250','','1','3','-2','195','0','111111','','','admin','未知','','1519184250','1519184254','1','111111,111111,','0','0','0','0','0','0','111111','','1','0','0','4');
INSERT INTO `dede_archives` VALUES('10','10','0','1519192794','','1','1','0','62','0','1111111','','','admin','未知','','1519192794','1519192799','1','1111111,11111111,','0','0','0','0','0','0','11111111','','1','0','0','5');
INSERT INTO `dede_archives` VALUES('11','11','0','1519193122','','1','1','0','199','0','java','','','admin','未知','','1519193122','1519193134','1','java,java,','0','0','0','0','0','0','java','','1','0','0','6');
INSERT INTO `dede_archives` VALUES('12','20','0','1519193262','','1','1','-2','156','0','php','','','admin','未知','','1519193262','1519193273','1','php,php,','0','0','0','0','0','0','php','','1','0','0','7');
INSERT INTO `dede_archives` VALUES('14','22','0','1519193945','','1','1','-2','145','0','ps1','','','admin','未知','','1519193945','1519193955','1','ps1,ps1,','0','0','0','0','0','0','ps1','','1','0','0','9');
INSERT INTO `dede_archives` VALUES('15','9','0','1519193966','','1','1','0','151','0','ps1ps1','','','admin','未知','','1519193966','1519193972','1','ps1ps1,ps1ps1,','0','0','0','0','0','0','ps1ps1','','1','0','0','10');
INSERT INTO `dede_archives` VALUES('17','4','0','1519196407','','1','1','-2','57','0','22','','','admin','未知','','1519196407','1519196414','1','','0','0','0','0','0','0','33','','1','0','0','12');
INSERT INTO `dede_archives` VALUES('18','24','0','1519196626','','1','1','-2','144','0','33','','','admin','未知','','1519196626','1519196630','1','333,','0','0','0','0','0','0','333','','1','0','0','13');
INSERT INTO `dede_archives` VALUES('19','15','0','1519196837','','1','1','0','173','0','公开课1','','','admin','未知','','1519196837','1519196848','1','公,开课,公,开课,','0','0','0','0','0','0','公开课1公开课1公开课1','','1','0','0','14');
INSERT INTO `dede_archives` VALUES('20','5','0','1519198124','','1','3','0','208','0','ps作品','','','admin','未知','','1519198124','1519198137','1','作品,作品,','0','0','0','0','0','0','ps作品ps作品ps作品','','1','0','0','15');
INSERT INTO `dede_archives` VALUES('21','6','0','1519199123','','1','3','0','166','0','web','','','admin','未知','','1519199123','1519199131','1','web,web,','0','0','0','0','0','0','web','','1','0','0','16');
INSERT INTO `dede_archives` VALUES('22','7','0','1519199138','','1','3','0','131','0','软件下载','','','admin','未知','','1519199138','1519199151','1','软件下载,软件下载,','0','0','0','0','0','0','软件下载','','1','0','0','17');
INSERT INTO `dede_archives` VALUES('23','19','0','1519266193','p','1','1','0','220','0','Vue.js——60分钟快速入门','','','admin','未知','/uploads/180222/1-1P222102424923.png','1519266193','1519265529','1','Vue,入门,Vue.js','0','0','0','0','0','0','Vue.js介绍 Vue.js 是当下很火的一个JavaScript MVVM库，它是以数据驱动和组件化的思想构建的。相比于Angular.js，Vue.js提供了更加简洁、更易于理解的API，使得我们能够快速地上手并使用Vue','','1','0','0','18');
INSERT INTO `dede_archives` VALUES('24','19','0','1519268161','p','1','1','0','150','0','Vue.js——vue-router 60分钟快速入门','','','admin','未知','/uploads/allimg/180222/1-1P222105G70-L.png','1519268161','1519268297','1','Vue.js,Vue,vue-router,router','0','0','0','0','0','0','概述 vue-router是Vue.js官方的路由插件，它和vue.js是深度集成的，适合用于构建单页面应用。vue的单页面应用是基于路由和组件的，路由用于设定访问路径，并将路径和组件映射起来。传','','1','0','0','19');
INSERT INTO `dede_archives` VALUES('25','19','0','1519268394','p','1','1','0','182','0','Vue.js——60分钟webpack项目模板快速入门','','','admin','未知','/uploads/allimg/180222/1-1P2221100510-L.png','1519268394','1519268506','1','Vue.js,Vue,webpack','0','0','0','0','0','0','概述 browserify是一个 CommonJS风格的模块管理和打包工具，上一篇我们简单地介绍了Vue.js官方基于browserify构筑的一套开发模板。webpack提供了和browserify类似的功能，在前端资源管理这方面','','1','0','0','20');
INSERT INTO `dede_archives` VALUES('26','19','0','1519268544','p','1','1','0','169','0','Vue.js——60分钟browserify项目模板快速入门','','','admin','未知','/uploads/allimg/180222/1-1P2221103100-L.png','1519268544','1519268620','1','Vue.js,Vue,browserify','0','0','0','0','0','0','概述 在之前的一系列vue.js文章，我们都是用传统模式引用vue.js以及其他的js文件的，这在开发时会产生一些问题。 首先，这限定了我们的开发模式是基于页面的，而不是基于组件的，组','','1','0','0','21');
INSERT INTO `dede_archives` VALUES('27','19','0','1519268647','p','1','1','0','169','0','Vue.js——使用$.ajax和vue-resource实现OAuth的注册、登','','','admin','未知','/uploads/allimg/180222/1-1P2221105370-L.png','1519268647','1519268782','1','Vue,ajax,vue-resource','0','0','0','0','0','0','概述 上一篇我们介绍了如何使用vue resource处理HTTP请求，结合服务端的REST API，就能够很容易地构建一个增删查改应用。 这个应用始终遗留了一个问题，Web App在访问REST API时，没有经过','','1','0','0','22');
INSERT INTO `dede_archives` VALUES('28','19','0','1519268847','p','1','1','0','166','0','Vue.js——vue-resource全攻略','','','admin','未知','/uploads/allimg/180222/1-1P222110R20-L.gif','1519268847','1519268945','1','Vue,Vue.js,vue-resource','0','0','0','0','0','0','概述 上一篇我们介绍了如何将$.ajax和Vue.js结合在一起使用，并实现了一个简单的跨域CURD示例。Vue.js是数据驱动的，这使得我们并不需要直接操作DOM，如果我们不需要使用jQuery的DOM选择','','1','0','0','23');
INSERT INTO `dede_archives` VALUES('29','19','0','1519268987','p','1','1','0','149','0','Vue.js——基于$.ajax实现数据的跨域增删查改','','','admin','未知','/uploads/allimg/180222/1-1P2221110450-L.png','1519268987','1519269098','1','Vue,Vue.js,ajax,数据的跨域增删查改','0','0','0','0','0','0','概述 之前我们学习了Vue.js的一些基础知识，以及如何开发一个组件，然而那些示例的数据都是local的。 在实际的应用中，几乎90%的数据是来源于服务端的，前端和服务端之间的数据交互','','1','0','0','24');
INSERT INTO `dede_archives` VALUES('30','19','0','1519269145','p','1','1','0','185','0','Vue.js——60分钟组件快速入门（下篇）','','','admin','未知','/uploads/allimg/180222/1-1P2221113220-L.png','1519269145','1519269230','1','Vue.js,Vue,组件','0','0','0','0','0','0','概述 上一篇我们重点介绍了组件的创建、注册和使用，熟练这几个步骤将有助于深入组件的开发。另外，在子组件中定义props，可以让父组件的数据传递下来，这就好比子组件告诉父组','','1','0','0','25');
INSERT INTO `dede_archives` VALUES('31','19','0','1519269145','p','0','1','-2','185','0','Vue.js——60分钟组件快速入门（下篇）','','','admin','未知','/uploads/allimg/180222/1-1P2221114550-L-50.png','1519269145','1519269314','1','Vue.js,Vue,组件','0','0','0','0','0','0','概述 上一篇我们重点介绍了组件的创建、注册和使用，熟练这几个步骤将有助于深入组件的开发。另外，在子组件中定义props，可以让父组件的数据传递下来，这就好比子组件告诉父组','','1','0','0','25');
INSERT INTO `dede_archives` VALUES('32','19','0','1519269831','p','1','1','0','147','0','Vue.js——60分钟组件快速入门（上篇）','','','admin','未知','/uploads/allimg/180222/1-1P2221124320-L.png','1519269831','1519269920','1','Vue,Vue.js,组件','0','0','0','0','0','0','组件简介 组件系统是Vue.js其中一个重要的概念，它提供了一种抽象，让我们可以使用独立可复用的小组件来构建大型应用，任意类型的应用界面都可以抽象为一个组件树： 那么什么是','','1','0','0','27');
INSERT INTO `dede_archives` VALUES('34','28','0','1519271257','p','1','1','0','185','0','jQuery选择器大全(48个代码片段+21幅图演示)','','','admin','未知','/uploads/allimg/180222/1-1P222114T40-L.png','1519271257','1519271369','1','jQuery,选择器','0','0','0','0','0','0','选择器是jQuery最基础的东西，本文中列举的选择器基本上囊括了所有的jQuery选择器，也许各位通过这篇文章能够加深对jQuery选择器的理解，它们本身用法就非常简单，我更希望的是它能','','1','0','0','29');
INSERT INTO `dede_archives` VALUES('35','28','0','1519271917','p','1','1','0','112','0','细说jquery ui和jqgrid的ASP.NET实现','','','admin','未知','/uploads/allimg/180222/1-1P2221151180-L.png','1519271917','1519271515','1','jquery,jqgrid,ASP.NET','0','0','0','0','0','0','前言 数据显示的方式可以通过很多控件来实现，例如服务端的原生GridView，第三方控件ComponentArt、Telerik等，客户端的flexgrid, extgrid, easyui, jqgrid等等。在这里我要讲解的是jqgrid，它也是我','','1','0','0','30');
INSERT INTO `dede_archives` VALUES('39','29','0','1519276911','','1','1','-2','170','0','111','','','admin','未知','','1519276911','1519276919','1','111,1111,','0','0','0','0','0','0','1111','','1','0','0','28');
INSERT INTO `dede_archives` VALUES('40','29','0','1519282718','p','1','1','0','172','0','Web布局中的几种宽高自适应','','','admin','未知','/uploads/allimg/180222/1-1P2221323000-L.png','1519282718','1519276999','1','Web,布局,宽高自适应','0','0','0','0','0','0','前言 打开浏览器，输入一个网址，显示一个页面，页面最基本的布局和框架用户一目了然。但是用户所用的浏览器、显示器、分辨率大多都是不一样的，如何确保不同用户持有不同设备','','1','0','0','29');
INSERT INTO `dede_archives` VALUES('41','20','0','1519283108','p','1','1','0','66','0','10例糟糕的PHP代码','','','admin','未知','/uploads/180222/1-1P222150536432.png','1519283108','1519283194','1','PHP','0','0','0','0','0','0','这篇文章在很早以前就看到了，由于最近要自己做一些主题方面的东西，代码需要更加规范，用这些反面的例子来约束自己，告诉自己代码不应该这样写，虽然它也能实现功能，但那样','','1','0','0','30');
INSERT INTO `dede_archives` VALUES('42','20','0','1519283236','p','1','1','0','170','0','PHP导入Excel数据','','','admin','未知','/uploads/180222/1-1P222150Paa.png','1519283236','1519283320','1','导入Excel数据,PHP','0','0','0','0','0','0','在 Sourceforge 上提供了一个开源的PHP导入Excel数据的类，在下载的项目中也提供了简单的示例。下面我做了一些简易的包装，让PHP导入Excel数据用起来更为简便。 首先看看示例代码，了解','','1','0','0','31');
INSERT INTO `dede_archives` VALUES('43','17','0','1519283406','p','1','1','0','139','0','所见即所得富文本编辑器实现原理','','','admin','未知','/uploads/180222/1-1P2221510352I.png','1519283406','1519283459','1','富文本编辑','0','0','0','0','0','0','相信很多人都使用过多种富文本编辑器，富文本编辑器常用于编辑博客、用户交互，富文本编辑器分为两种：所见即所得和非所见即所得 两种富文本编辑器的实现原理是不相同的。 1','','1','0','0','32');
INSERT INTO `dede_archives` VALUES('44','22','0','1519284324','p','1','1','0','90','0','从桌面升起的一个太阳系【创意】','','','admin','未知','/uploads/allimg/180222/1-1P222152K10-L.gif','1519284324','1519284477','1','gif','0','0','0','0','0','0','创意gif图','','1','0','0','33');
INSERT INTO `dede_archives` VALUES('45','16','0','1519287303','p','1','1','0','158','0','学习Javascript闭包（Closure）','','','admin','未知','/uploads/180222/1-1P222161609136.jpg','1519287303','1519287413','1','Javascript,闭包','0','0','0','0','0','0','闭 包（closure）是Javascript语言的一个难点，也是它的特色，很多高级应用都要依靠闭包实现。 下面就是我的学习笔记，对于Javascript初学者应该是很有用的。 一、变量的作用域 要理解闭','','1','0','0','34');
INSERT INTO `dede_archives` VALUES('46','24','0','1519287472','p','1','1','0','98','0','加密货币的本质','','','admin','未知','/uploads/180222/1-1P222161SUZ.jpg','1519287472','1519287529','1','加密货币','0','0','0','0','0','0','去年，比特币暴涨，其他币也像雨后春笋一样冒出来，已经有1000多种了。 很多人都在问，加密货币（cryptocurrency）的时代，真的来临了吗？将来会不会人类不再使用美元、人民币，改用','','1','0','0','35');
INSERT INTO `dede_archives` VALUES('47','24','0','1519287673','p','1','1','0','79','0','比特币入门教程','','','admin','未知','/uploads/allimg/180222/1-1P2221622060-L.jpg','1519287673','1519287759','1','比特币','0','0','0','0','0','0','比特币（bitcoin）诞生于2008年的一篇 论文 。 一个署名为中本聪的人，提出了革命性的构想：让我们创造一种不受政府或其他任何人控制的货币！这个想法堪称疯狂：一串数字，背后没','','1','0','0','36');
INSERT INTO `dede_archives` VALUES('48','24','0','1519287792','p','1','1','0','72','0','区块链入门教程','','','admin','未知','/uploads/allimg/180222/1-1P2221623340-L.jpg','1519287792','1519287839','1','区块链','0','0','0','0','0','0','区块链（blockchain）是眼下的大热门，新闻媒体大量报道，宣称它将创造未来。 可是，简单易懂的入门文章却很少。区块链到底是什么，有何特别之处，很少有解释。 下面，我就来尝试','','1','0','0','37');
INSERT INTO `dede_archives` VALUES('49','20','0','1519288181','p','1','1','0','137','0','php面向对象精要(1)','','','admin','未知','/uploads/allimg/180222/1-1P2221630290-L.jpg','1519288181','1519288270','1','php,面向对象','0','0','0','0','0','0','1、静态属性与方法 每一个类的实例拥有自己的属性和方法，每一个类也可以包含静态属性，静态属性不属于类的任何实例，可以把静态属性理解成存储在类中的全局变量，可以在任何','','1','0','0','38');
INSERT INTO `dede_archives` VALUES('50','20','0','1519288279','p','1','1','0','57','0','php面向对象精要(2)','','','admin','未知','/uploads/allimg/180222/1-1P2221631530-L.jpg','1519288279','1519288335','1','php,面向对象','0','0','0','0','0','0','1，self与parent关键字 self指向当前的类，常用来访问静态成员，方法和常量 parent指向父类，常用来调用父类的构造函数和方法和成员，也可以用来访问常量 1 ? php 2 class Ancestor { 3 const N','','1','0','0','39');
INSERT INTO `dede_archives` VALUES('51','20','0','1519288341','p','1','1','0','140','0','php面向对象精要(3)','','','admin','未知','/uploads/allimg/180222/1-1P2221632350-L.jpg','1519288341','1519288378','1','php,面向对象','0','0','0','0','0','0','1，final关键字定义的方法，不能被重写 由于final修饰了show方法，子类中重写show方法会报错 ? php class MyClass { final function show(){ echo hello world . PHP_EOL ; } } class MyTest extends MyClass { function sh','','1','0','0','40');
INSERT INTO `dede_archives` VALUES('52','20','0','1519288466','p','1','1','0','190','0','浅谈PHP异常处理','','','admin','未知','/uploads/allimg/180222/1-1P2221634430-L.png','1519288466','1519288510','1','PHP,异常处理','0','0','0','0','0','0','1、PHP中异常的独特性 PHP中的异常的独特性，即PHP中的异常不同于主流语言C++、java中的异常。在Java中，异常是唯一的错误报告方式，而在PHP中却不是这样，而是把所有不正常的情况都视','','1','0','0','41');
INSERT INTO `dede_archives` VALUES('53','22','0','1519288989','p','1','1','0','83','0','设计师应该知道的17个PS技巧','','','admin','未知','/uploads/allimg/180222/1-1P2221643380-L.png','1519288989','1519289045','1','PS技巧','0','0','0','0','0','0','1. 设置网格线 保持像素完美 不在1:1分辨率下也能保持像素完美，可以通过创建网格线来避免虚边的出现。 编辑 ＞首选项＞ 参考线、网格和切片 保持尺寸为偶数。 例如：设置网格线间','','1','0','0','42');
INSERT INTO `dede_archives` VALUES('54','26','0','1519289679','p','1','1','0','65','0','真是厉害了','','','admin','未知','/uploads/180222/1-1P22216495B62.png','1519289679','1519289303','1','真是,厉,害了,真是,厉,害了,','0','0','0','0','0','0','','','1','0','0','43');
